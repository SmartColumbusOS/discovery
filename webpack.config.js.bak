const path = require('path')
const nodeExternals = require('webpack-node-externals');
// const MiniCssExtractPlugin = require('mini-css-extract-plugin')
// const HtmlWebpackPlugin = require('html-webpack-plugin')
// const CopyWebpackPlugin = require('copy-webpack-plugin')
// const CompressionPlugin = require('compression-webpack-plugin')
// const zopfli = require('@gfx/zopfli')
const webpack = require('webpack')

// module.exports = (env, argv) => {

//   let plugins = [
//     // new HtmlWebpackPlugin({
//     //   template: './src/index.html',
//     //   filename: './index.html'
//     // }),
//     // new MiniCssExtractPlugin({
//     //   filename: '[name].[hash].css',
//     //   chunkFilename: '[id].[hash].css'
//     // }),
//     new CopyWebpackPlugin([{
//       from: 'config'
//     }]),
//     new webpack.ProvidePlugin({
//       "React": "react",
//     })
//   ]

//   if (argv.mode === 'production') {
//     plugins.push(new CompressionPlugin({
//       compressionOptions: {
//         numiterations: 15,
//       },
//       algorithm(input, compressionOptions, callback) {
//         return zopfli.gzip(input, compressionOptions, callback);
//       },
//     }))
//   }

//   return {
//     mode: 'production',
//     entry: './src/index.js',
//     output: {
//       path: path.resolve('lib'),
//       filename: 'index.js',
//       libraryTarget: 'commonjs2'
//     },
//     module: {
//       rules: [{
//         test: /\.js$/,
//         exclude: /node_modules/,
//         use: {
//           loader: 'babel-loader',
//           options: {
//             presets: ['@babel/preset-env'],
//             plugins: [require('@babel/plugin-proposal-object-rest-spread')]
//           }
//         }
//       },
//       {
//         test: /\.(pdf|jpg|png|gif|ico)$/,
//         use: [{ loader: 'file-loader' }]
//       },
//       {
//         test: /\.svg$/,
//         use: [{ loader: 'svg-inline-loader' }]
//       },
//       {
//         test: /\.(css|scss)$/,
//         use: [
//           'style-loader',
//           'css-loader',
//           {
//             loader: 'postcss-loader',
//             options: {
//               ident: 'postcss',
//               plugins: [require('autoprefixer')({
//                 browsers: ['> 1%', 'last 2 versions']
//               })]
//             }
//           },
//           'sass-loader'
//         ]
//       },
//       {
//         test: /\.(pdf|jpg|png|gif|ico)$/,
//         use: [{
//           loader: 'file-loader'
//         }]
//       },
//       {
//         test: /\.svg$/,
//         use: [{
//           loader: 'svg-inline-loader'
//         }]
//       }
//       ]
//     },
//     devServer: {
//       historyApiFallback: true,
//       contentBase: path.join(__dirname, 'dist'),
//       compress: true,
//       open: true,
//       port: 9001,
//       host: '0.0.0.0'
//     },
//     plugins: plugins,
//     optimization: {
//       moduleIds: 'hashed',
//       runtimeChunk: false,
//       splitChunks: {
//         cacheGroups: {
//           vendor: {
//             test: /[\\/]node_modules[\\/]/,
//             name: 'vendors',
//             chunks: 'all',
//           }
//         }
//       }
//     }
//   }
// }

module.exports = {
  entry: path.resolve(__dirname, 'src/index.js'),
  output: {
    path: path.resolve(__dirname, './build/lib'),
    // path: path.resolve('lib'),
    filename: 'index.js',
    libraryTarget: 'commonjs2'
  },
  externals: [nodeExternals()],
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /(node_modules|bower_components)/,
        loader: 'babel-loader'
      },
      {
        test: /\.(css|scss)$/,
        use: [
          'style-loader',
          'css-loader',
          {
            loader: 'postcss-loader',
            options: {
              ident: 'postcss',
              plugins: [require('autoprefixer')({
              })]
            }
          },
          'sass-loader'
        ]
      },
      {
        test: /\.svg$/,
        use: [{
          loader: 'svg-inline-loader'
        }]
      },
      {
        test: /\.(pdf|jpg|png|gif|ico)$/,
        use: [{
          loader: 'file-loader'
        }]
      },
    ]
  },
  plugins: [
    new webpack.ProvidePlugin({
      "React": "react",
    })
  ],
  optimization: {
    minimize: false
  }
};
